apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: envoy
  name: envoy
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        browserstack.com/application: envoy
        browserstack.com/component: envoy
    spec:
      containers:
        - image: envoyproxy/envoy:v1.27-latest
          name: envoy
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 10000
#          resources:
#            requests:
#              memory: "200Mi"
#              cpu: "200m"
#              ephemeral-storage: "80Mi"
#            limits:
#              memory: "200Mi"
#              cpu: "200m"
          args:
            - "-c"
            - "/etc/envoy/envoy.yaml"
          volumeMounts:
            - mountPath: /etc/envoy/envoy.yaml
              name: my-envoy
              subPath: envoy.yaml
      restartPolicy: Always
      volumes:
        - name: my-envoy
          configMap:
            name: envoy-config
  selector:
    matchLabels:
      browserstack.com/application: envoy

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  labels:
    application: envoy
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: broker
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 10000
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ingress_http
                    access_log:
                      - name: envoy.access_loggers.file
                        typed_config:
                          path: /dev/stdout
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains:
                            - "*"
                          routes:
                            - match:
                                prefix: "/"
                                grpc: {}
                              route:
                                cluster: service
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                      - name: envoy.filters.http.cors
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                      - name: envoy.filters.http.local_ratelimit
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                          stat_prefix: http_local_rate_limiter
                          token_bucket:
                            max_tokens: 1000
                            tokens_per_fill: 1000
                            fill_interval: 1s
                          filter_enabled:
                            runtime_key: local_rate_limit_enabled
                            default_value:
                              numerator: 100
                              denominator: HUNDRED
                          filter_enforced:
                            runtime_key: local_rate_limit_enforced
                            default_value:
                              numerator: 100
                              denominator: HUNDRED
                          response_headers_to_add:
                            - append: false
                              header:
                                key: x-local-rate-limit
                                value: 'true'
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
    
      clusters:
        - name: service
          type: STRICT_DNS
          connect_timeout: 25s
          lb_policy: round_robin
          load_assignment:
            cluster_name: service
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: broker-service
                          port_value: 8081
          max_requests_per_connection: 10000000
          per_connection_buffer_limit_bytes: 100000000
          http2_protocol_options: {
            "hpack_table_size": 4294967295,
            "max_concurrent_streams": 2147483647,
            "initial_stream_window_size": 2147483647,
            "max_outbound_frames": 100000,
            "max_outbound_control_frames": 100000,
            "max_consecutive_inbound_frames_with_empty_payload": 10,
          }

---

apiVersion: v1
kind: Service
metadata:
  name: envoy-svc
  labels:
    app.kubernetes.io/name: envoy-label
spec:
  type: ClusterIP
  selector:
    application: envoy
  ports:
    - name: glb
      port: 10000
      targetPort: 10000
      protocol: TCP